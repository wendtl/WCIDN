#!/bin/bash

# TODO:
# Parse input via case statement in lieu of if statement
# Implement 'remove' function
# Get current date

#BEGIN ENUMERATING FUNCTIONS
#Main function: Displays contents of "dates" file
default()
{
    if [ -f ./dates ]; then
	    cat dates | column -t -s '@'
    else
	echo "#@EVENT NAME@START DATE@END DATE" > dates
	default
    fi
}

add()
{
    echo "Type name of event, followed by [ENTER]:"
    read name
    echo "Type start date, followed by [ENTER]:"
    read start
    echo "Type end date, followed by [ENTER]:"
    read end
    LEN=$( cat dates | wc -l )
    echo "$LEN@$name@$start@$end" >> dates 
}

remove()
{
    cat dates | column -t -s '@'
    echo "Input number corresponding to the event to be removed, followed by [ENTER]:"
    read NUM 
    # Decrement num
    NUM=$(( $NUM + 1 ))
    # Remove line corresponding with num
    sed "${NUM}d" dates | column -t -s '@' > dates
    # Move through 'dates' file to change first character of every line to new number
    
}
#Process first argument and run coordinating function
if [ "$1" == "add" ]; then
    add

elif [ "$1" == "" ]; then
    default

elif [ "$1" == "remove" ]; then
    remove

fi
